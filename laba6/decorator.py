import threading
from functools import wraps

# === –ü–æ—Ç–æ–∫–æ–±–µ–∑–ø–µ—á–Ω–∏–π –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä ===
def thread_safe(func):
    lock = threading.Lock()

    @wraps(func)
    def wrapper(*args, **kwargs):
        with lock:
            print(f"üîí –§—É–Ω–∫—Ü—ñ—è {func.__name__} –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –±–µ–∑ –∫–æ–Ω—Ñ–ª—ñ–∫—Ç—ñ–≤ –ø–æ—Ç–æ–∫—ñ–≤")
            result = func(*args, **kwargs)
            print(f"üîì –§—É–Ω–∫—Ü—ñ—è {func.__name__} –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
            return result
    return wrapper
